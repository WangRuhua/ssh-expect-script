#!/usr/bin/expect  
#!/usr/bin/expect  -d

if { [llength $argv] != 7 } {
    puts "usage:./$argv0  user ip port passwd commands"
	exit 1
}

match_max 3000

set user [lindex $argv 0]
set ip [lindex $argv 1]
set port [lindex $argv 2]
set passwd [lindex $argv 3]
set source_files [lindex $argv 4]
set target_dir [lindex $argv 5]
set pull_flag [lindex $argv 6]
set timeout  60


#./rsync.exp $user $ip $port $passwd $source_files $target_dir
#puts "rsync -arzv -e \"ssh -p $port\" $source_files $user@$ip:$target_dir"
proc print_time {} {
    return [ clock format [clock seconds]  -format %H:%M:%S]
}
proc info_msg { a } {
    global ip
    send_user "\n[print_time] info $ip $a\n"
}

set prompt "(%|#|\\\$) $"

    set timeout  60

    if {$pull_flag == 1} {
    puts "spawn rsync -arzv -e \"ssh -p $port -l $user\" $ip:$source_files $target_dir"
    spawn rsync -arzv -e "ssh -p $port -l $user" $ip:$source_files $target_dir
    } else {
    puts "spawn rsync -arzv -e \"ssh -p $port -l $user\" $source_files $ip:$target_dir"
    spawn rsync -arzv -e "ssh -p $port -l $user" $source_files $ip:$target_dir
    }
expect 	{
        "Name or service not known" {
            send_error "[print_time] $ip server name not found" 
            exp_close 
            exit 1 }
        "information on Morningstar\'s system" {
            exp_continue }
        -re $prompt { 
            puts "[print_time] $ip connected -expect-"
                    send "\r" }
        -re "\[pP]assword:" {
            send "$passwd\r"
            set timeout 600
            exp_continue }

        "\(yes\/no\)\?" {
            send "yes\r" 
            exp_continue }
        "Please type \'yes\' or \'no\': " {
            send "yes\r" 
            exp_continue }

        "Connection refused" {
            send_error "[print_time] $ip connection refused\n"
            exit 3 }
        "Your password will expire in * days" {
            exp_continue }

        "Permission denied, please try again." {
            send_error "\n [print_time] $ip seems the password is incorrect \n"
            exit 4
        }
	    "is not in the sudoers file.  This incident will be reported." {
            send_error "\n [print_time] $ip $user does not has the sudo priviege\n"
            exit 5 }
        timeout {
            send_error "\n[print_time] $ip\t timeout\n"
            exit 2 }
        eof {
            info_msg { "files rsync complete" }
            exit 0 }
}
