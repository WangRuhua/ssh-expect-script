#!/usr/bin/expect  
#!/usr/bin/expect  -d

set pid [pid]
log_file -a ./exp.log
#log_user -info|0|1
#log_user -info 1
log_user -debug 1


set argc [llength $argv]
if { $argc < 2 } {
    puts "useage:$argv0 targetIP targetDIR sshuser srcfiles "
    puts "sample:$argv0 google.com /tmp mike ./a ./b"
    exit 0
}


puts "$argc 2"
for {set i 3} {$i<$argc} {incr i} {
puts "arg $i: [lindex $argv $i]"
}

set dst_ip [lindex $argv 0]
set dst_dir [lindex $argv 1]
#set user [lindex $argv 2]
set src [lrange $argv 2  $argc]

puts pid:$pid:dst_dir:$dst_dir:src:$src
puts "spawn rsync -arzv -e \"ssh -p 22 -l $user\" $src $dst_ip:$dst_dir  --timeout=60"
set command "-arzv -e \"ssh -p 22 -l $user\" $src $dst_ip:$dst_dir  --timeout=60"
set command "-arzv -e \"ssh -p 22  \" $src $dst_ip:$dst_dir  --timeout=60"
#puts $command
match_max 100000
set timeout 61

#proc ssh_login {host_ip} {

set user "msdomain1\\rwang4"

set host_ip $dst_ip 
set password "Rome0322\r"
#spawn rsync -arzv -e "ssh -p 22 -l $user" $src $dst_ip:$dst_dir  --timeout=60
#spawn rsync -arzv  "$src ./live_ip.atr.list"  $dst_ip:$dst_dir  --timeout=60
spawn rsync -arzv -e "ssh -p 22  " $src $dst_ip:$dst_dir  --timeout=60
##login to dst server

#while 1 {
#expect {
    #"2" break
    #"1"
    #}
#}
trap exit {SIGINT SIGTERM}

puts "tring to login $host_ip"
while 1 {
    puts "loin part"
    expect {
        "(yes/no)?" {
            send "yes\r"
            }
        "password: " {
            send "$password\n"
            break
            }

        "Permission denied, please try again.\r\r"  {
            puts "ERROR : password wrong or winbindd down \[$host_ip\]"
            exit 1
                }

        "sending incremental file list\r" {
            puts "INFO : tranfer files beginning hostname:\[$host_ip\]"
            set timeout -1
            break
                }
        }
}
#ssh_login "adsearch610"
puts "out of loin part"

### make sure sending 
while 1 {
    expect {
        "sending incremental file list\r" {
            puts "INFO : tranfer files beginning hostname:\[$host_ip\]"
            set timeout -1
            break
        }
        "Permission denied, please try again.\r\r"  {
         puts "ERROR : password wrong or winbindd down hostname:\[$host_ip\]"
         exit 1
       }
        "total size is * speedup is *\r" {
        puts "successful : rsync complete hostname:\[$host_ip\]"
        exit 0
        }
    }

}
while 1 {
    expect {
        eof {
            puts "got eof ,we quit hostname:\[$host_ip\]"
            exit 0
        }
        "total size is * speedup is *\r" {
        puts "successful : rsync complete hostname:\[$host_ip\]"
        exit 0
        }
    }
}
