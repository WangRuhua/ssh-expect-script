#!/usr/bin/expect  -- 

if { [llength $argv] < 1 } {
	puts "### USAGE:  $argv0 ip username  "
	exit 1
}

match_max 600000

#set ip "$env(ABSIP)"
#set user "$env(ABSUSER)"
#set passwd "$env(ABSPASSWD)"
##set port "$env(ABSPORT)"
#set timeoutflag "$env(ABSSSHTIMEOUT)"
set ip [lindex $argv 0]
set user msdomain1\\psdeploy
set user msdomain1\\rwang4
set user [lindex $argv 1]

#llength $users
if {$user == ""} {
     puts "user is msdomain1\\rwang4 now"
     set user msdomain1\\rwang4
}



set passwd Rome0322
set timeoutflag 60
set yesnoflag 0
set timeout $timeoutflag
#puts "$ip $user $passwd $port $commands"

#puts "spawn ssh $user@$ip -p$port"

for {} {1} {} {
# for is only used to retry when "Interrupted system call" occured


#spawn ssh -l$user -p$port $ip
#spawn cat /home/user_0/sa_tools/init_server/init/id_rsa_15.232.pub | ssh $user@$ip  "cat >> .ssh/authorized_keys" 
spawn ssh-copy-id -i /home/MSDOMAIN1/rwang4/dist_all/id_rsa_15.232.pub  $user@$ip
#spawn ssh $user@$ip -p$port

expect 	{

	"assword:" {
		send "$passwd\r"
		break;
	}

	"yes/no)?" {
		set yesnoflag 1
		send "yes\r"
		break;
	}

	"FATAL" {
		puts "\n[info]CONNECTERROR: $ip occur FATAL ERROR!!!\n"
		exit 2
	}

	timeout {
		puts "\n[info]CONNECTERROR: $ip logon TIMEOUT!!!\n"
		exit 2
	}

	"No route to host" {
		puts "\n[info]CONNECTERROR: $ip No route to host!!!\n"
		exit 2
	}

	"Connection Refused" {
		puts "\n[info]CONNECTERROR: $ip Connection Refused!!!\n"
		exit 2
	}

	"Connection refused" {
		puts "\nCONNECTERROR: $ip Connection Refused!!!\n"
		exit 2
	}

	"Host key verification failed" {
		puts "\nCONNECTERROR: $ip Host key verification failed!!!\n"
		exit 2
	}

	"Illegal host key" {
		puts "\nCONNECTERROR: $ip Illegal host key!!!\n"
		exit 2
	}
		
	"Connection Timed Out" {
		puts "\nCONNECTERROR: $ip logon TIMEOUT!!!\n"
		exit 2
	}

	"Interrupted system call" {
		puts "\n$ip Interrupted system call!!!\n"
	}

	"Disconnected; connection lost" {
		puts "\n$ip connection lost!!!\n"
		exit 2
	}

	"Authentication failed" {
		puts "\n$ip Authentication failed!!!\n"
		exit 2
	}

	"Destination Unreachable" {
		puts "\n$ip Destination Unreachable!!!\n"
		exit 2
	}
}
}

if { $yesnoflag == 1 } {
	expect {
		"assword:" {
			send "$passwd\r"
		}

		"yes/no)?" {
			set yesnoflag 2
			send "yes\r"
		}
	}
}

if { $yesnoflag == 2 } {
	expect {
		"assword:" {
			send "$passwd\r"
		}
	}
}


expect "expecting"  exit 
}
