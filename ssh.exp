#!/usr/bin/expect  
#!/usr/bin/expect  -d

proc usage {} {
    send_error "usage:./$argv0  user ip port passwd commands\n"
	exit 1
}

if {[llength $argv] != 6} usage
match_max 3000

set user [lindex $argv 0]
set ip [lindex $argv 1]
set port [lindex $argv 2]
set passwd [lindex $argv 3]
set logfile [lindex $argv 4]
set commands [lindex $argv 5]

if {[regexp "^\[0-9]+$" $port] != 1} usage
#init variables
set timeout 60
#log_user 0
log_file $logfile


set green "\033\[32m"
set red "\033\[31m"
set nocolor "\033\[0m"
set cyan "\033\[36m"

proc print_time {} {
    return [ clock format [clock seconds]  -format %H:%M:%S]
}
proc info_msg { a } {
    global ip
    global cyan
    global red
    global green
    global nocolor
    send_user "\n${cyan}[print_time]${nocolor} info ${cyan}$ip ${green}$a${nocolor}\n"
}
proc error_msg { a } {
    global ip
    global cyan
    global red
    global green
    global nocolor
    send_error "\n${red}[print_time] error $ip $a${nocolor}\n"
}

set prompt "(%|#|\\\$) $"

set commands_flag 0
spawn ssh  $user@$ip -p$port
send_user "[print_time] connecting to $user@$ip -p$port commands:$commands \n" 
###login to server
####
expect  {
        -re $prompt { 
            send_user "[print_time] $ip connected \n"
            send "\r" }

        -re "\[P|p]assword:" {
            send "$passwd\r" }

        "\(yes\/no\)\?" {
            send "yes\r" 
            exp_continue }

        "Please type \'yes\' or \'no\': " {
            send "yes\r" 
            exp_continue }

        timeout {
            error_msg {"connect timeout"}
            exit 2 }
        "Connection timed out" {
            error_msg {"connect timeout"}
            exit 2 }
        "Connection refused" {
            error_msg {"connection resused "}
            exit 3 }
        "Name or service not known" {
            error_msg {"server name or IP not known"}
            exit 5 }
        "Permission denied, please try again." {
            error_msg {"seems the password is incorrect"}
            exit 4 }

}

#puts "The output is '$expect_out(buffer)'."
###send commands to servers
expect {
    -re "Last login: .* from .*$" {
        #puts "\r\n[print_time] $ip I'm login successful"
        send_user "\n" }
    -re $prompt {
        if {$commands_flag == 0} {
        send "$commands \r"
        set commands_flag 1 }
        }
    "Your password will expire in * days" {
        if {$commands_flag == 0} {
        send "$commands \r" 
        set commands_flag 1}
        #send "stty -echo\r\n$commands \r" 
        }

    "assword" {
        send "$passwd\r"
        exp_continue }

    -re "\[Pp]assword for $user" {
        send "$passwd\r"
        exp_continue }
    "Permission denied, please try again.\r\r\n" {
        error_msg {"seems the password is incorrect"}
        exit 4 }
        ## centOS
    "is not in the sudoers file.  This incident will be reported." {
        send_error "\n [print_time] $ip $user does not has the sudo priviege\n"
        exit 5 }
    timeout {
        send_error "\n[print_time] $ip\t connect timeout\n"
        exit 2 }
}
#puts "The output is '$expect_out(buffer)'."

for { set i 0 } { $i < 3 } { incr i } {
    expect {
            "assword" {
                    send "$passwd\r" }
            -re $prompt { 
                if {$commands_flag == 0} {
                        send "$commands\r"
                        set commands_flag 1
                   } else {
                        #send_user "The output is '$expect_out(buffer)'."
                        send "logout\r" 
                        #info_msg { "logout is sent\n" } }

                }
            timeout {
                    send_error "\n[print_time] $ip\t timeout\n" }
            eof {
                #puts "\n[print_time] operation complete $ip\n"
                info_msg { "operation complete" }
                exit 0 }

        }
    }
